set name "T3 Feeder"

Initialize:
	set unitType @poly
	op shl procId @thisx 10
	op add procId procId @thisy
	set sourceMin 500
	set dropRange 7

	GetLinks:
		set factory reconstructor1
		jump GetLinks equal factory null
	
	sensor factoryX factory @x
	sensor factoryY factory @y
	
	GetStartInfo:
		ubind unitType
		jump GetStartInfo equal @unit null
		sensor cap @unit @itemCapacity
		sensor range @unit @range
		ulocate building core false 0 sourceX sourceY sourceFound source

Start:
###########################################	
CheckFactory:
###########################################
	sensor buildType factory @config
	sensor facSil factory @silicon
	sensor facGlass factory @metaglass
	sensor facTit factory @titanium
	op div silLevel facSil 260
	op div glassLevel facGlass 80
	op div titLevel facTit 160
	
	FindMin:
		jump MinSil lessThan silLevel glassLevel
		jump MinGlass always
	MinSil:
		set stockLevel 260
		jump CheckSilicon lessThan silLevel titLevel
	MinGlass:
		set stockLevel 80
		jump CheckGlass lessThan glassLevel titLevel
		set stockLevel 160
		jump CheckTitanium always
	
CheckSilicon:
	op sub needed stockLevel facSil
	set material @silicon
	jump CheckStock always
	
CheckGlass:
	op sub needed stockLevel facGlass
	set material @metaglass
	jump CheckStock always

CheckTitanium:
	op sub needed stockLevel facTit
	set material @titanium

CheckStock:
	jump NothingToDo equal needed 0
	sensor sourceStock source material
	op sub available sourceStock sourceMin
	jump NothingToDo lessThanEq available 0
	op min amount available needed
	jump FeedFactory greaterThan amount 0	

NothingToDo:
	set amount 0
	set material null
	jump Start always

###########################################
FeedFactory:
###########################################
CheckMule:
	jump FindMule equal mule null
	sensor muleDead mule @dead
	jump FindMule equal muleDead true

	sensor muleFlag mule @flag
	jump StartRun equal muleFlag procId
	jump FindMule notEqual muleFlag 0
	set @unit mule
	ucontrol flag procId
	jump StartRun always
	
FindMule:
	ubind unitType
	jump Start equal @unit null
	sensor unitDead @unit @dead
	jump FindMule equal unitDead true

	sensor unitFlag @unit @flag
	jump UseMule equal unitFlag procId

FlagMule:
	jump FindMule notEqual unitFlag 0
	ucontrol flag procId

UseMule:
	set mule @unit
	
StartRun:
	sensor carried mule @totalItems
	jump Pickup equal carried 0
	sensor carriedMat mule @firstItem
	jump Pickup equal carriedMat material
	
DumpUnneeded:
	ucontrol itemDrop @air carried
	sensor carried mule @totalItems
	jump StartRun greaterThan carried 0
	
Pickup:
	ucontrol within sourceX sourceY dropRange isNearSource
	jump PickupLoop equal isNearSource true
	ucontrol approach sourceX sourceY dropRange
	jump Pickup always

	PickupLoop:
		op min amount amount cap
		set pickupI 0
		LoopUntilFull:
			ucontrol itemTake source material amount
			op add pickupI pickupI 1
			sensor carried mule @totalItems 
			jump FinishRun greaterThanEq pickupI 100
			jump LoopUntilFull lessThan carried amount

Deliver:
	ucontrol within factoryX factoryY dropRange isNearFactory
	jump DeliverLoop equal isNearFactory true
	ucontrol approach factoryX factoryY dropRange
	jump Deliver always

	DeliverLoop:
		set deliverI 0
		LoopUntilEmpty:
			ucontrol itemDrop factory carried
			sensor carried mule @totalItems
			jump FinishRun equal carried 0
			op add deliverI deliverI 1
			jump LoopUntilEmpty lessThan deliverI 100
	
FinishRun:
	jump Start always