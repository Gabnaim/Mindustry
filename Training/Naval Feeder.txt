set name "Naval Feeder"

Initialize:
	set unitType @flare
	set sourceMin 500
	set error " "

	set dropRange 7
	set releaseWaitSecs 30

	op shl procId @thisx 9
	op add procId procId @thisy
	op mul releaseWaitMs releaseWaitSecs 1000

	GetDropTarget:
		set l 0
		LinkLoop:
			getlink link l
			sensor type link @type
			jump Found equal type @naval-factory
		NextLink:
			op add l l 1
			jump LinkLoop lessThan l @links
			jump GetDropTarget always
		Found:
			set dropTarget link
	
	GetDropCoords:
		sensor dropX dropTarget @x
		sensor dropY dropTarget @y 
		sensor dropCap dropTarget @itemCapacity
	
FindMule:
	set releaseStart @time
	set firstUnit null
	set free 0
	set minDistance 1000
	set status "FIND"

	FindLoop:
		ubind unitType
		jump NotFound equal @unit null
		sensor unitDead @unit @dead
		jump FindLoop equal unitDead true
	
		jump FinishCount equal firstUnit @unit
		jump FlagProcess notEqual firstUnit null
		set firstUnit @unit
	
	FlagProcess:
		sensor flag @unit @flag
		jump UseMule equal flag procId
		jump FindLoop notEqual flag 0
	
	CheckDistance:
		ucontrol stop
		sensor x @unit @x
		sensor y @unit @y
		op sub xDiff @thisx x
		op sub yDiff @thisy y
		op len distance xDiff yDiff
		jump CountFree equal status "FIND"
		GetClosest:
			op sub diff distance minDistance
			op abs diff diff
			jump FlagMule lessThan diff 3
			jump FindLoop always
		
		CountFree:
			op add free free 1
			jump FindLoop greaterThan distance minDistance
			set minDistance distance
			jump FindLoop always
	
	FinishCount:
		jump NotFound equal free 0
		set error " "
		set firstUnit null
		jump FindMule equal status "FLAG"
		set status "FLAG"
		jump FindLoop always
	
	NotFound:
		set error "No free units"
		jump FindMule always
	
	FlagMule:
		ucontrol flag procId
	
	UseMule:
		set mule @unit
		ucontrol boost true
	
	FindDone:
		set error " "

	GetStartInfo:
		sensor cap @unit @itemCapacity
		sensor range @unit @range
		ulocate building core false 0 sourceX sourceY sourceFound source
		jump GetStartInfo equal sourceFound false

	set releaseStart @time
	set error " "

Start:
	op sub releaseWait @time releaseStart
	jump Release greaterThanEq releaseWait releaseWaitMs

CheckMule:
	jump FindMule equal mule null
	sensor muleDead mule @dead
	jump FindMule equal muleDead true

	sensor muleFlag mule @flag
	jump SelectMaterial equal muleFlag procId
	jump FindMule notEqual muleFlag 0
	set @unit mule

SelectMaterial:
	set status "SELECTMATERIAL"
	sensor buildType dropTarget @config
	jump CheckRisso equal buildType @risso
	jump CheckRetusa equal buildType @retusa
	jump Start always
	
CheckRisso:	
	sensor facSil dropTarget @silicon
	sensor facGlass dropTarget @metaglass
	set stockLevel 40
	jump CheckSilicon lessThan facSil facGlass
	set stockLevel 70
	jump CheckGlass always
	
CheckRetusa:
	sensor facSil dropTarget @silicon
	sensor facGlass dropTarget @metaglass
	sensor facTit dropTarget @titanium
	op div silLevel facSil 30
	op div glassLevel facGlass 50
	op div titLevel facTit 40
	
	FindMin:
		jump MinSil lessThan silLevel glassLevel
		jump MinGlass always
	MinSil:
		set stockLevel 60
		jump CheckSilicon lessThan silLevel titLevel
	MinGlass:
		set stockLevel 40
		jump CheckGlass lessThan glassLevel titLevel
		jump CheckTitanium always
	
CheckSilicon:
	op sub needed stockLevel facSil
	set material @silicon
	jump CheckStock always
	
CheckGlass:
	op sub needed stockLevel facGlass
	set material @metaglass
	jump CheckStock always

CheckTitanium:
	op sub needed stockLevel facTit
	set material @titanium
	
CheckStock:
	jump NothingToDo equal needed 0
	sensor sourceStock source material
	op sub available sourceStock sourceMin
	jump NothingToDo lessThanEq available 0
	op min amount available needed
	jump Feed greaterThan amount 0	

NothingToDo:
	set amount 0
	set material null
	jump Start always

Feed:
StartRun:
	sensor carried mule @totalItems
	sensor carriedMat mule @firstItem

	jump DropToSource notEqual material carriedMat
	jump PickupFromSource equal status "SOURCEDROP"
	jump PickupFromSource equal status "TOSOURCEPICKUP"
	jump PickupFromSource equal carried 0
	jump DropToTarget always

DropToSource:
	ucontrol within sourceX sourceY dropRange isNearSource
	jump SourceDrop equal isNearSource true
	set status "TOSOURCEDROP"
	ucontrol boost true
	ucontrol approach sourceX sourceY dropRange
	jump Start always

	SourceDrop:
		set status "SOURCEDROP"
		set releaseStart @time
		set dropI 0
		SourceDropLoop:
			ucontrol itemDrop source cap
			sensor carried @unit @totalItems
			jump PickupFromSource equal carried 0
			op add dropI dropI 1
			jump SourceDropLoop lessThan dropI 100

		# drop to air if source is full
		ucontrol itemDrop @air cap
		jump Start always

PickupFromSource:
	ucontrol within sourceX sourceY dropRange isNearSource
	jump SourcePickup equal isNearSource true
	ucontrol boost true
	ucontrol approach sourceX sourceY dropRange
	set status "TOSOURCEPICKUP"
	jump Start always

	SourcePickup:
		set status "SOURCEPICKUP"
		set releaseStart @time
		set pickupI 0
		SourcePickupLoop:
			ucontrol itemTake source material cap
			sensor carried mule @totalItems
			jump DropToTarget equal carried cap

			op add pickupI pickupI 1
			jump SourcePickupLoop lessThan pickupI 100 
			# make it work when the core was upgraded
			ulocate building core false 0 sourceX sourceY sourceFound source

DropToTarget:
	ucontrol within dropX dropY dropRange isNearDrop
	jump TargetDrop equal isNearDrop true
	set status "TOTARGETDROP"
	ucontrol boost true
	ucontrol approach dropX dropY dropRange
	jump Start always

	TargetDrop:
		set status "TARGETDROP"
		set releaseStart @time
		set dropI 0
		TargetDropLoop:
			ucontrol itemDrop dropTarget cap
			sensor carried @unit @totalItems
			jump Return equal carried 0
			op add dropI dropI 1
			jump TargetDropLoop lessThan dropI 100 

Return:
	jump Start equal returnMaterial null
	sensor returnStock dropTarget returnMaterial
	jump Start equal returnStock 0

PickupFromTarget:
	TargetPickup:
		set status "TARGETPICKUP"
		set pickupI 0
		TargetPickupLoop:
			ucontrol itemTake dropTarget returnMaterial cap
			sensor carried mule @totalItems
			jump Start equal carried cap
			sensor returnStock dropTarget returnMaterial
			jump Start equal returnStock 0

			op add pickupI pickupI 1
			jump TargetPickupLoop lessThan pickupI 100 

FinishRun:
	jump Start always

Release:
	set releaseStart @time
	jump Start equal status "IDLE"
	set status "RELEASE"
	ucontrol stop
	ucontrol flag 0
	ucontrol boost false
	ucontrol unbind
	set mule null
	set status "IDLE"
	jump Start always