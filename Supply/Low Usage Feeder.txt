set sourceFile "Low Usage Feeder.txt"
# Designed to feed two items with one unit at a slow rate
# For example phase fabric and silicon to a dropTarget,
# or thorium and phase fabric to a container supplying
# RTGs and overdrive projector

Initialize:
	set unitType @flare
	op shl procId @thisx 10
	op add procId procId @thisy
	set material1 @silicon
	set material2 @phase-fabric
	set stockLevel1 10
	set stockLevel2 10
	set sourceMin 200
	set dropRange 7

	CheckMaterials:
		op equal isNull1 material1 null
		op equal isNull2 material2 null
		op and bothNull isNull1 isNull2
		jump Initialize equal bothNull true

	GetDropTarget:
		set l 0
		LinkLoop:
			getlink link l
			sensor type link @type
			sensor buildingCap link @itemCapacity
			jump Found greaterThanEq buildingCap 10
		NextLink:
			op add l l 1
			jump LinkLoop lessThan l @links
			jump GetDropTarget always
		Found:
			set dropTarget link
	
	GetDropCoords:
		sensor dropX dropTarget @x
		sensor dropY dropTarget @y
		sensor dropCap dropTarget @itemCapacity
	
	GetStartInfo:
		ubind unitType
		jump GetStartInfo equal @unit null
		sensor cap @unit @itemCapacity
		sensor range @unit @range
		ulocate building core false 0 sourceX sourceY sourceFound source

Start:
CheckMaterial1:
	set skip1 isNull1
	jump CheckMaterial2 equal material1 null

	set checkMat material1
	set stockLevel stockLevel1
	op add checkReturn @counter 1
	jump CheckMaterial always

	set skip1 skip
	set stockRate1 stockRate

CheckMaterial2:
	set skip2 isNull2
	jump SelectMaterial equal material2 null
	
	set checkMat material2
	set stockLevel stockLevel2
	op add checkReturn @counter 1
	jump CheckMaterial always

	set skip2 skip
	set stockRate2 stockRate

SelectMaterial:
	op and skipBoth skip1 skip2
	jump Start equal skipBoth true
	jump Use2 equal skip1 true
	jump Use1 equal skip2 true
	jump Use2 lessThan stockRate2 stockRate1

	Use1:
		set material material1
		jump FeedDrop always

	Use2:
		set material material2

FeedDrop:
CheckMule:
	jump FindMule equal mule null
	sensor muleDead mule @dead
	jump StartRun equal muleDead false
	
FindMule:
	ubind unitType
	jump Start equal @unit null
	sensor unitDead @unit @dead
	jump FindMule equal unitDead true

	sensor unitFlag @unit @flag
	jump UseMule equal unitFlag procId

FlagMule:
	jump FindMule notEqual unitFlag 0
	ucontrol flag procId

UseMule:
	set mule @unit
	
StartRun:
	sensor carried mule @totalItems
	sensor carriedMat mule @firstItem
	jump DumpItems notEqual material carriedMat
	jump Pickup equal carried 0
	jump DropItems always

DumpItems:
	ucontrol within sourceX sourceY dropRange isNearSource
	jump DumpLoop equal isNearSource true
	ucontrol approach sourceX sourceY dropRange
	ucontrol boost true
	jump Start always

	DumpLoop:
		set dumpI 0
		ucontrol boost false
		sensor carried mule @totalItems
		DumpUntilEmpty:
			ucontrol itemDrop source carried
			sensor carried @unit @totalItems
			jump Pickup equal carried 0
			op add dumpI dumpI 1
			jump DumpUntilEmpty lessThan dumpI 100
		jump Start always

Pickup:
	ucontrol within sourceX sourceY dropRange isNearSource
	jump PickupLoop equal isNearSource true
	ucontrol approach sourceX sourceY dropRange
	ucontrol boost true
	jump Start always

	PickupLoop:
		set pickupI 0
		ucontrol boost false
		LoopUntilFull:
			ucontrol itemTake source material cap
			sensor carried mule @totalItems
			jump DropItems equal carried cap

			op add pickupI pickupI 1
			jump LoopUntilFull lessThan pickupI 100 
			# make it work when the core was upgraded
			ulocate building core false 0 sourceX sourceY sourceFound source

DropItems:
	ucontrol within dropX dropY dropRange isNearDrop
	jump DropLoop equal isNearDrop true
	ucontrol boost true
	ucontrol approach dropX dropY dropRange
	jump Start always

	DropLoop:
		set dropI 0
		ucontrol boost false
		sensor carried mule @totalItems
		LoopUntilEmpty:
			ucontrol itemDrop dropTarget carried
			sensor carried @unit @totalItems
			jump Pickup equal carried 0
			op add dropI dropI 1
			jump LoopUntilEmpty lessThan dropI 100 

FinishRun:
	jump Start always

CheckMaterial:
	sensor sourceLevel source checkMat
	op lessThan notEnough sourceLevel sourceMin
	sensor dropLevel dropTarget checkMat
	op greaterThanEq isFull dropLevel stockLevel
	op or skip notEnough full
	op div stockRate dropLevel stockLevel
	set @counter checkReturn
	