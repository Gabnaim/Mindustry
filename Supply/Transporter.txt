Initialize:
	set status "INITIALIZE"
	set unitType @pulsar
	set maxUnits 2
	set material @silicon
	set dropRange 7
	set pickupHere true
	set error " "
	set errorIcon @blast-compound
	
	op shl procId @thisx 10
	op add procId procId @thisy

	GetTargetParams:
		set coreTransport true # other side is core

		# if coreTransport is false, coordinates of other target
	    # are required
		set otherEndX 132
		set otherEndY 111

		jump GetStartInfo equal coreTransport true

		NotCoreTransport:
			jump NeedTargetCoords equal otherEndX 0
			jump NeedTargetCoords equal otherEndY 0
			jump GetStartInfo always

		NeedTargetCoords:
			set error "need other end coordinates if coreTransport is false"
			jump Error always

	GetStartInfo:
		ubind unitType
		jump GetStartInfo equal @unit null
		sensor dead @unit @dead
		jump GetStartInfo equal dead true
		set firstUnit @unit

		sensor cap @unit @itemCapacity
		sensor range @unit @range 
		op sub range range 1
		op min dropRange dropRange range

		ulocate building core false 0 coreX coreY coreFound core
	
	GetInput:
		set actionSorter sorter2
		set materialSorter sorter1
		jump GetInput equal actionSorter null
		jump GetInput equal materialSorter null

	GetLinks:
		jump GetLinks lessThan @links 2

		set i 0
		set found 0
		LinkLoop:
			getlink link i
			sensor type link @type
			jump FoundContainer equal link core
			jump FoundContainer equal type @container 
			jump FoundContainer equal type @vault
			jump FoundContainer equal type @mass-driver
			NextLink:
				op add i i 1
				jump LinkLoop lessThan i @links
				jump EndGetLinks notEqual linkedStorage null
			NoStorage:
				set error "No storage is linked"
				jump Error always
			FoundContainer:
				set linkedStorage link

		EndGetLinks:


	FindOtherEndPoint:
		jump FindOtherEnd equal coreTransport false
		set otherEnd core
		jump SetEndPoints always

	FindOtherEnd:
		ucontrol within otherEndX otherEndY 1 isNear
		jump AtOtherEnd equal isNear true
		ucontrol move otherEndX otherEndY
		jump FindOtherEnd always

	AtOtherEnd:
		ulocate building storage false 0 endX endY endFound otherEnd
		jump GetTargetParams equal endFound false
		
	SetEndPoints:
		jump PickupHere equal pickupHere true
		DropHere:
			set source otherEnd
			set dropTarget linkedStorage
			jump GetCoords always

		PickupHere:
			set source linkedStorage
			set dropTarget otherEnd
		
	GetCoords:
		sensor sourceX source @x
		sensor sourceY source @y
		sensor dropX dropTarget @x
		sensor dropY dropTarget @y

	Preflag:
		set status "PREFLAG"
		set preflagged 0
		PreflagLoop:
			sensor dead @unit @dead
			jump PreflagBind equal dead true
			sensor flag @unit @flag
			jump Unflag greaterThanEq preflagged maxUnits
			jump Preflag equal flag procId

			jump PreflagBind notEqual flag 0
			ucontrol flag procId
			
			Preflag:
				ucontrol itemDrop @air 200
				op add preflagged preflagged 1
				jump PreflagBind always
			Unflag:
				jump PreflagBind notEqual flag procId
				ucontrol flag 0
				ucontrol itemDrop @air 200
			PreflagBind:
				ubind unitType
				jump PreflagLoop notEqual firstUnit @unit

		FinishPreflag:
			set firstUnit null

	set status "IDLE"

Start:
CheckActive:
	sensor actionChoice actionSorter @config
	jump ChangeAction notEqual actionChoice lastAction
	jump Reset equal actionChoice null
	jump Start equal status "ERROR"

	sensor materialChoice materialSorter @config
	jump ChangeMaterial notEqual materialChoice lastMaterial

BindUnit:
	ubind unitType
	jump Start equal @unit null

	jump FinishGroup equal firstUnit @unit
	jump ProcessUnit notEqual firstUnit null
	set firstUnit @unit
	
ProcessUnit:
	sensor isDead @unit @dead
	jump BindUnit equal isDead true

	sensor flag @unit @flag
	jump BindUnit notEqual flag procId

SelectAction:
	sensor carried @unit @totalItems
	sensor carriedItem @unit firstItem
	jump DropItems equal carried cap
	jump Pickup equal carried 0
	jump DumpItems notEqual carriedItem material
	jump Pickup always 

DumpItems:
	ucontrol itemDrop @air carried
	jump Pickup always
	
DropItems:
	ucontrol within dropX dropY dropRange isNearDrop
	jump DropLoop equal isNearDrop true
	ucontrol boost true
	ucontrol approach dropX dropY dropRange
	jump Start always

	DropLoop:
		set dropI 0
		ucontrol boost false
		sensor carried @unit @totalItems
		LoopUntilEmpty:
			ucontrol itemDrop dropTarget carried
			sensor carried @unit @totalItems
			jump Pickup equal carried 0
			op add dropI dropI 1
			jump LoopUntilEmpty lessThan dropI 100 

Pickup:
	ucontrol within sourceX sourceY dropRange isNearPickup
	jump SelectItem equal isNearPickup true
	ucontrol boost true
	ucontrol approach sourceX sourceY dropRange
	jump Start always

	SelectItem:
		jump PickupLoop equal takeAll false
		set maxStock 0
		set i 0
		set maxMaterial material
		SelectLoop:
			lookup item mat i
			sensor stock source mat 
			jump NextMat lessThanEq stock maxStock
			set maxStock stock
			set maxMaterial mat
		NextMat:
			op add i i 1
			jump SelectLoop lessThan i 16
	
		jump Start equal maxStock 0
		set material maxMaterial
	
	PickupLoop:
		set pickupI true
		ucontrol boost false
		sensor carried @unit @totalItems
		LoopUntilFull:
			ucontrol itemTake source material cap
			sensor carried @unit @totalItems
			jump DropItems equal carried cap

			op add pickupI pickupI 1
			jump LoopUntilFull lessThan pickupI 100 

		jump Start always

ChangeAction:
	jump Reset equal actionChoice null
	jump Start equal actionChoice errorIcon
	set lastAction actionChoice
	jump Initialize always

ChangeMaterial:
	op equal takeAll materialChoice null
	set lastMaterial materialChoice
	set material materialChoice
	jump Initialize always

FinishGroup:
	set totalUsed used
	set used 0
	set firstUnit null
	jump Start always

Error:
	set status "ERROR"
	control config actionSorter errorIcon
	jump Start always

Reset:
	jump Start equal status "IDLE"
	jump Start equal status "ERROR"
	set status "STOPPING"

	set firstUnit null
	StopLoop:
		ubind unitType
		jump AllStopped equal @unit firstUnit
		jump StopUnit notEqual firstUnit null
		set firstUnit @unit
		
		StopUnit:
			sensor flag @unit @flag
			jump StopLoop notEqual flag procId
			ucontrol stop
			ucontrol flag 0
			ucontrol itemDrop @air 200
		jump StopLoop always
		
	AllStopped:
		set status "IDLE"
		jump Start always
