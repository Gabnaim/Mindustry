Initialize:
	set unitType @poly
	set takeAll true
	set material @titanium
	set dropRange 3
	set maxTick 360 #break loop after 6 seconds idle

	op shl procId @thisx 10
	op add procId procId @thisy
	
	GetLinks:
		set switch switch1
		set source container2
		jump GetLinks equal source null
		jump GetLinks equal switch null
	
	sensor sourceX source @x
	sensor sourceY source @y
	
	GetStartInfo:
		ubind unitType
		jump GetStartInfo equal @unit null
		sensor cap @unit @itemCapacity
		ulocate building core false 0 coreX coreY coreFound core
	set dropTarget core
	sensor dropX dropTarget @x
	sensor dropY dropTarget @y

Start:
CheckActive:
	sensor active switch @enabled
	jump Start equal active false

BindUnit:
	ubind unitType
	jump Start equal @unit null
	sensor isDead @unit @dead
	jump Start equal isDead true

	sensor flag @unit @flag
	jump Start notEqual flag procId

SelectAction:
	sensor carried @unit @totalItems
	sensor carriedItem @unit firstItem
	jump DropItems equal carried cap
	jump Pickup equal carried 0
	jump DropItems notEqual carriedItem material
	jump Pickup always 
	
DropItems:
	ucontrol within dropX dropY dropRange isNearDrop
	jump DropLoop equal isNearDrop true
	print "Approaching drop\n"
	ucontrol boost true
	ucontrol approach dropX dropY dropRange
	jump Start always

	DropLoop:
		set startTick @tick
		ucontrol boost false
		sensor carried @unit @totalItems
		LoopUntilEmpty:
			ucontrol itemDrop core carried
			sensor carried @unit @totalItems
			jump Pickup equal carried 0

			# break loop if idling too long
			op sub elapsed @tick startTick
			jump Start greaterThan elapsed maxTick
			jump LoopUntilEmpty greaterThan carried 0 

Pickup:
	ucontrol within sourceX sourceY dropRange isNearPickup
	jump SelectItem equal isNearPickup true
	print "Approaching pickup\n"
	ucontrol boost true
	ucontrol approach sourceX sourceY dropRange
	jump Start always

	SelectItem:
		jump PickupLoop equal takeAll false
		set maxStock 0
		set i 0
		set maxMaterial material
		SelectLoop:
			lookup item mat i
			sensor stock source mat 
			jump NextMat lessThanEq stock maxStock
			set maxStock stock
			set maxMaterial mat
		NextMat:
			op add i i 1
			jump SelectLoop lessThan i 16
	
		jump Start equal maxStock 0
		set material maxMaterial
	
	PickupLoop:
		set startTick @tick
		ucontrol boost false
		sensor carried @unit @totalItems
		LoopUntilFull:
			ucontrol itemTake source material cap
			sensor carried @unit @totalItems
			jump DropItems equal carried cap

			# break loop if idling too long
			op sub elapsed @tick startTick
			jump Start greaterThan elapsed maxTick
			jump LoopUntilFull lessThan carried cap

		jump Start always
