Initialize:
	set unitType @mono
	set miningRange 7
	set minedOre @sand
	set dropToCore false

	# using units flagged by an external flagger 
	# with our procId
	set useFlagger true

	op shl procId @thisx 10
	op add procId procId @thisy

	jump UseUnflagged equal useFlagger false
	UseFlagged:
		set usedFlag procId
		jump GetLinks always

	UseUnflagged:
		set usedFlag 0

	GetLinks:
		set switch switch1
		jump GetLinks equal switch null
		jump GetStartInfo equal dropToCore true
		set dropTarget container1
		jump GetLinks equal dropTarget null
	
	GetStartInfo:
		ubind unitType
		jump GetStartInfo equal @unit null
		sensor cap @unit @itemCapacity
		ulocate building core false 0 coreX coreY coreFound core
		
		jump GetDropCoords equal dropToCore false
		set dropTarget core

		GetDropCoords:
			sensor dropX dropTarget @x
			sensor dropY dropTarget @y
		
		# Use this unit to find the nearest ore source
		GoToDrop:
			ucontrol within dropX dropY 1 isNearDrop
			jump LocateMine equal isNearDrop true
			ucontrol approach dropX dropY 1
			jump GoToDrop always

		LocateMine:
			ulocate ore core true minedOre oreX oreY oreFound oreMine
			jump Start equal oreFound true

		NoOre:
			print "No "
			print minedOre
			print " was found on the map"
			printflush message1
			stop
	
Start:
	printflush message1
CheckActive:
	sensor active switch @enabled
	jump Reset equal active false

BindUnit:
	ubind unitType
	jump Start equal @unit null
	sensor isDead @unit @dead
	jump Start equal isDead true
	sensor flag @unit @flag
	jump Start notEqual flag usedFlag

	jump FinishGroup equal firstUnit @unit
	jump SelectAction notEqual firstUnit null

StartGroup:
	set firstUnit @unit
	set isFirst true

SelectAction:
	sensor isMining @unit @mining
	sensor carried @unit @totalItems
	sensor carriedItem @unit @firstItem

	jump DropItems equal carried cap
	jump Mine equal carried 0
	jump Mine equal carriedItem minedOre

DropItems:
	ucontrol within dropX dropY miningRange isNearDrop
	jump DropLoop equal isNearDrop true
	ucontrol approach dropX dropY miningRange
	jump Next always

	DropLoop:
		sensor carried @unit @totalItems
		LoopUntilEmpty:
			ucontrol itemDrop dropTarget carried
			sensor carried @unit @totalItems
			jump LoopUntilEmpty greaterThan carried 0 
	jump Next always

Mine:
	MoveToOre:
		ucontrol within oreX oreY miningRange isNearMine
		jump MineOre equal isNearMine true
		ucontrol approach oreX oreY miningRange
	
	MineOre:
		ucontrol mine oreX oreY
		jump Next always
	
Next:
	op add unitI unitI 1
	jump Start always

Reset:
FinishGroup:
	set totalCount unitI
	set unitI 0
	set firstUnit null
	jump Start always
	
