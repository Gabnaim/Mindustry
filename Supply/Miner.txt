Initialize:
	set unitType @poly
	set minedOre @sand
	set dropToCore false
	set useFlagger true

	set miningRange 7
	set status "INITIALIZING"
	set error " "

	GetSwitch:
		set switch switch1
		jump GetSwitch equal switch null

	GetId:
		op shl procId @thisx 10
		op add procId procId @thisy
	
		jump UseUnflagged equal useFlagger false
		UseFlagged:
			set usedFlag procId
			jump GetStartInfo always
	
		UseUnflagged:
			set usedFlag 0

	GetStartInfo:
		ubind unitType
		jump GetStartInfo equal @unit null
		sensor cap @unit @itemCapacity
		ulocate building core false 0 coreX coreY coreFound core

	jump GetDropTarget equal dropToCore false
	set dropTarget core
	jump GetDropCoords always

	GetDropTarget:
		set l 0
		LinkLoop:
			getlink link l
			sensor type link @type
			jump Found equal link core
			jump Found equal type @container
			jump Found equal type @vault
			jump Found equal type @mass-driver
		NextLink:
			op add l l 1
			jump LinkLoop lessThan l @links
		NotFound:
			set error "No drop target is linked"
			set status "ERROR"
			jump GetDropTarget always
		Found:
			set dropTarget link
	
	GetDropCoords:
		sensor dropX dropTarget @x
		sensor dropY dropTarget @y

	set status "IDLE"
	set error " "
	set lastActive false
	
Start:
CheckActive:
	sensor active switch @enabled
	jump Reset equal active false
	jump SelectAction equal status "IDLE"
	jump SelectAction equal status "OREFINDING"

BindUnit:
	ubind unitType
	jump Start equal @unit null
	sensor isDead @unit @dead
	jump Start equal isDead true
	sensor flag @unit @flag
	jump Start notEqual flag usedFlag

SelectAction:
	jump FindOre equal oreFound false
	set status "MINING"
	sensor isMining @unit @mining
	sensor carried @unit @totalItems
	sensor carriedItem @unit @firstItem

	jump Mine equal carried 0
	jump DumpUnneeded notEqual carriedItem minedOre
	jump DropItems equal carried cap
	jump Mine always

DumpUnneeded:
	ucontrol itemDrop @air carried
	jump Mine always

DropItems:
	ucontrol within dropX dropY miningRange isNearDrop
	jump DropLoop equal isNearDrop true
	ucontrol boost true
	ucontrol approach dropX dropY miningRange
	jump Start always

	DropLoop:
		set dropI 0
		ucontrol boost false
		sensor carried @unit @totalItems
		LoopUntilEmpty:
			ucontrol itemDrop dropTarget carried
			sensor carried @unit @totalItems
			jump Mine equal carried 0
			op add dropI dropI 1
			jump LoopUntilEmpty lessThan dropI 100
	jump Start always

Mine:
	MoveToOre:
		ucontrol within oreX oreY miningRange isNearMine
		jump MineOre equal isNearMine true
		ucontrol boost true
		ucontrol approach oreX oreY miningRange
	
	MineOre:
		ucontrol mine oreX oreY
		jump Start always

FindOre:
	# Use this unit to find the nearest ore source
	set status "OREFINDING"
	GoToDrop:
		ucontrol within dropX dropY 1 isNearDrop
		jump LocateOre equal isNearDrop true
		ucontrol boost true
		ucontrol approach dropX dropY 1
		jump GoToDrop always
	
	LocateOre:
		ulocate ore core true minedOre oreX oreY oreFound oreMine
		jump FoundOre equal oreFound true

	NoOre:
		set error "No ore found"
		jump Error always

	FoundOre:
		jump Start always
		
Error:
	set status "ERROR"
	control enabled switch false
	jump Start always

Reset:
	jump Start equal status "IDLE"
	jump Start equal status "ERROR"
	set status "STOPPING"

	set firstUnit null
	StopLoop:
		ubind unitType
		jump AllStopped equal @unit firstUnit
		sensor flag @unit @flag
		jump StopLoop notEqual flag usedFlag

		jump ReleaseUnit notEqual firstUnit null
		set firstUnit @unit
		
		ReleaseUnit:
			ucontrol stop
			ucontrol itemDrop @air cap
			ucontrol unbind
		jump StopLoop always
		
	AllStopped:
		set status "IDLE"
		jump Start always
	
