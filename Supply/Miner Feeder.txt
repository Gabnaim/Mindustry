Initialize:
	set unitType @mono
	set miningRange 7

	# silicon smelter
	set item1 @sand
	set item2 @coal

	op shl procId @thisx 10
	op add procId procId @thisy

	GetLinks:
		set switch switch1
		jump GetLinks equal switch null
		set dropTarget container1
		jump GetLinks equal dropTarget null
	
	GetStartInfo:
		ubind unitType
		jump GetStartInfo equal @unit null
		sensor cap @unit @itemCapacity
		sensor dropX dropTarget @x
		sensor dropY dropTarget @y
		
		# Use this unit to find the nearest ore source
		GoToDrop:
			ucontrol within dropX dropY 1 isNearDrop
			jump LocateMines equal isNearDrop true
			ucontrol move dropX dropY
			jump GoToDrop always

		LocateMines:
			ulocate ore core true item1 ore1X ore1Y ore1Found oreMine
			ulocate ore core true item2 ore2X ore2Y ore2Found oreMine
	
	set muleI 0
	set currentMule null
	set mule1 null

Start:
	printflush message1
CheckActive:
	sensor active switch @enabled
	jump Reset equal active false

GetCurrentMule:
	jump GetMule2 equal muleI 1
	
	GetMule1:
		set mule mule1
		set minedOre item1
		jump CheckMule always
	
	GetMule2:
		set mule mule2
		set minedOre item2
		set muleI 0

CheckMule:
	jump BindUnit equal mule null
	sensor muleDead mule @dead 
	jump SelectAction equal muleDead false
	set mule null

BindUnit:
	ubind unitType
	jump Start equal @unit null
	sensor isDead @unit @dead
	jump Start equal isDead true
	sensor flag @unit @flag
	jump SetCurrentMule equal flag procId
	jump Start notEqual flag 0

GrabUnit:
	ucontrol flag procId

SetCurrentMule:
	jump SetMule2 equal muleI 1

	SetMule1:
		set mule1 mule
		jump SelectAction always

	SetMule2:
		set mule2 mule

SelectAction:
	sensor isMining mule @mining
	sensor carried mule @totalItems
	sensor carriedItem mule @firstItem

	jump DropItems equal carried cap
	jump Mine equal carried 0
	jump Mine equal carriedItem minedOre

DropItems:
	ucontrol within dropX dropY miningRange isNearDrop
	jump DropLoop equal isNearDrop true
	ucontrol approach dropX dropY miningRange
	jump Next always

	DropLoop:
		sensor carried mule @totalItems
		LoopUntilEmpty:
			ucontrol itemDrop dropTarget carried
			sensor carried mule @totalItems
			jump LoopUntilEmpty greaterThan carried 0 
	jump Next always

Mine:
	MoveToOre:
		ucontrol within oreX oreY miningRange isNearMine
		jump MineOre equal isNearMine true
		ucontrol approach oreX oreY miningRange
	
	MineOre:
		ucontrol mine oreX oreY
		jump Next always
	
Next:
	op add muleI muleI 1
	jump Start always

Reset:
FinishGroup:
	set totalCount unitI
	set unitI 0
	set firstUnit null
	jump Start always
	
