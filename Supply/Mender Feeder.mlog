set name "Smart Mender"

Initialize:
	set unitType @mega
	set supplyFromCore true
	set minSupply 500
	set powerSave true

	set material @phase-fabric
	set targetType @mend-projector
	
	set error " "
	set status "INITIALIZE"

	set dropRange 7
	set releaseWaitSecs 30

	op mul procId @thisx @maph
	op add procId procId @thisy
	op floor procId procId
	op mul releaseWaitMs releaseWaitSecs 1000
	
	set neededLinks 1
	jump GetLinks equal supplyFromCore true
	set neededLinks 2

	GetLinks:
		jump GetLinks lessThan @links neededLinks	
		set source null
		set l 0
		set targetCount 0
		LinkLoop:
			getlink link l
			sensor type link @type
			jump FoundTarget equal type targetType
			jump NextLink equal supplyFromCore true
			sensor cap link @itemCapacity
			jump FoundSource greaterThanEq cap 100
		FoundTarget:
			op add targetCount targetCount 1
			sensor targetCap target @itemCapacity
			jump NextLink always
		FoundSource:
			set source link
		NextLink:
			op add l l 1
			jump LinkLoop lessThan l @links
			jump GetLinks equal targetCount 0
			jump EndGetLinks equal supplyFromCore true
			jump GetLinks equal source null
		EndGetLinks:
			set totalLinks @links
		
	GetStartInfo:
		ubind unitType
		jump GetStartInfo equal @unit null
		sensor cap @unit @itemCapacity
		sensor speed @unit @speed
		ulocate building core false 0 coreX coreY coreFound core
		jump GetSourceCoords equal supplyFromCore false
		set source core

	GetSourceCoords:
		sensor sourceX source @x
		sensor sourceY source @y

	set status "START"
	set error " "
	set lastLink 0
	set mendEnabled true
	set releaseStart @time

#--------------------------------------------------
MainLoop:
#--------------------------------------------------
Start:
	op sub releaseWait @time releaseStart
	jump Reset greaterThanEq releaseWait releaseWaitMs

CheckMule:
	jump FindMule equal mule null
	sensor muleDead mule @dead
	jump FindMule equal muleDead true

	sensor muleFlag mule @flag
	jump StartRun equal muleFlag procId
	jump FindMule notEqual muleFlag 0
	RecycleMule:
		ubind mule
		ucontrol flag procId
		jump StartRun always

FindMule:
	set status "FINDMULE"
	set mule null
	set closest null
	set minDistance 1000
	
	ubind unitType
	jump NoUnits equal @unit null
	set firstUnit @unit
	jump FindProcess always

	FindLoop:
		ubind unitType
		jump FinishCount equal firstUnit @unit
		
	FindProcess:
		sensor isDead @unit @dead
		jump FindLoop equal isDead true
		sensor flag @unit @flag
		jump UseMule equal flag procId
		jump FindLoop notEqual flag 0
		sensor controlled @unit @controlled
		jump FindLoop greaterThanEq controlled 2

	CheckDistance:
		sensor x @unit @x
		sensor y @unit @y
		op sub xDiff @thisx x
		op sub yDiff @thisy y
		op len distance xDiff yDiff
			
		jump FindLoop greaterThan distance minDistance
		set minDistance distance
		set closest @unit
		jump FindLoop always
	
	FinishCount:
		jump NoUnits equal closest null
		set mule closest
		ubind mule
		ucontrol flag procId
		jump FindDone always
	
	FlagMule:
		ucontrol flag procId
	
	UseMule:
		set mule @unit
	
	FindDone:
		set error " "

StartRun:
	set status "FEED"
	
	sensor carried mule @totalItems
	jump FeedTargets equal carried 0

	sensor carriedMat mule @firstItem
	jump FeedTargets equal material carriedMat

	op add callback @counter 1
	jump DropToSource always

FeedTargets:
	jump GetLinks lessThan @links neededLinks

	set l 0
	TargetLoop:
		sensor carried mule @totalItems
		jump GetTarget greaterThanEq carried 0
		
		op add callback @counter 1
		jump PickupFromSource always

	GetTarget:
		getlink link l
		sensor type link @type

	CheckHealth:
		jump EndHealthCheck equal powerSave false
		sensor maxHealth link @maxHealth
		sensor health link @health
		jump EndHealthCheck equal health maxHealth

	DamageFound:
		op add damaged damaged 1
		set mendEnabled true
		
	EndHealthCheck:
		jump NextTarget notEqual type targetType
		jump Feed equal powerSave false
		control enabled link mendEnabled

	Feed:
		set target link
		sensor targetX target @x
		sensor targetY target @y

	Approach:
		ucontrol within targetX targetY dropRange isNear
		jump Drop equal isNear true
		ucontrol approach targetX targetY dropRange
		jump Approach always

	Drop:
		ucontrol itemDrop target cap
		
	NextTarget:
		op add l l 1
		jump TargetLoop lessThan l @links

EndTargetLoop:
	set lastLink 0
	jump Start equal powerSave false
	op equal mendEnabled damaged 0
	set damaged 0
	jump Start always
	
	
#--------------------------------------------------
WrapUp:
#--------------------------------------------------
	
Reset:
	jump FinishRelease equal mule null
	jump Start equal status "IDLE"
	jump Release equal status "RELEASING"

Stop:
	ubind mule
	ucontrol stop
	set status "RELEASING"
		
Release:
	op sub releaseWait @time releaseStart
	jump Start lessThan releaseWait releaseWaitMs
	
	ubind mule
	ucontrol flag 0
	ucontrol move releaseX releaseY
	set releaseStart @time
	
FinishRelease:
	set status "IDLE"
	jump Start always

#-------------------------------------------------
SubRoutines:
#-------------------------------------------------
PickupFromSource:
	sensor sourceDead source @dead
	jump SourceDead equal sourceDead true

	sensor supply source material
	jump NotEnough lessThan supply minSupply

	ucontrol within sourceX sourceY dropRange isNearSource
	jump SourcePickup equal isNearSource true
	ucontrol boost true
	ucontrol approach sourceX sourceY dropRange
	jump Start always

	SourcePickup:
		set releaseStart time
		set pickupI 0
		SourcePickupLoop:
			ucontrol itemTake source material cap
			sensor carried mule @totalItems
			jump EndPickup greaterThanEq carried cap

			op add pickupI pickupI 1
			jump SourcePickupLoop lessThan pickupI 10

	EndPickup:
		set @counter callback

DropToSource:
	ucontrol within sourceX sourceY dropRange isNear
	jump SourceDrop equal isNear true
	ucontrol boost true
	ucontrol approach sourceX sourceY dropRange
	jump DropToSource always

	SourceDrop:
		ucontrol itemDrop source cap
		sensor carried mule @totalItems
		jump EndSourceDrop equal carried 0

		ucontrol itemDrop @air cap

	EndSourceDrop:
		set @counter callback

#-------------------------------------------------
Errors:
#-------------------------------------------------
SourceDead:
	set error "Source not found"
	jump Start always

NotEnough:
	set error "Not enough stock"
	jump Start always

NoUnits:
	set error "No free units"
	jump GetLinks always

