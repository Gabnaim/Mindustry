Initialize:
	set unitType @flare
	op shl procId @thisx 10
	op add procId procId @thisy
	set maxTick 600 #release mule after 10 seconds idle
	set sourceMin 500
	set dropRange 1

	GetLinks:
		set factory reconstructor1
		jump GetLinks equal factory null
	
	sensor factoryX factory @x
	sensor factoryY factory @y
	
	GetStartInfo:
		ubind unitType
		jump GetStartInfo equal @unit null
		sensor cap @unit @itemCapacity
		sensor range @unit @range
		ulocate building core false 0 sourceX sourceY sourceFound source

Start:
	printflush message1
###########################################	
CheckFactory:
###########################################
	set stockLevel 80
	sensor facSil factory @silicon
	sensor facGraph factory @graphite
	jump CheckGraphite lessThan facGraph facSil
	
CheckSilicon:
	op sub needed stockLevel facSil
	set material @silicon
	jump CheckStock greaterThan needed 0
	
CheckGraphite:
	op sub needed stockLevel facGraph
	set material @graphite
	jump NothingToDo equal needed 0

CheckStock:
	sensor sourceStock source material
	op sub available sourceStock sourceMin
	jump NothingToDo lessThanEq available 0
	op min amount available needed
	jump FeedFactory greaterThan amount 0	

NothingToDo:
	set amount 0
	set material null
	jump Start always

###########################################
FeedFactory:
###########################################
CheckMule:
	jump FindMule equal mule null
	sensor muleDead mule @dead
	jump StartRun equal muleDead false
	
FindMule:
	ubind unitType
	jump Start equal @unit null
	sensor unitDead @unit @dead
	jump FindMule equal unitDead true
	sensor unitFlag @unit @flag
	jump GrabMule equal unitFlag procId
	jump FindMule notEqual unitFlag 0
	ucontrol flag procId

GrabMule:
	set mule @unit
	
StartRun:
	ucontrol approach sourceX sourceY dropRange
	
DropUnneeded:
	sensor carried mule @totalItems
	jump Pickup equal carried 0
	jump Pickup equal carried null
	sensor carriedMat mule @firstItem
	jump Pickup equal carriedMat material
	set unneededI 0

	DropUnneededTilEmpty:
		ucontrol itemDrop source carried
		sensor carried mule @totalItems
		jump Pickup equal carried 0
		op add unneededI unneededI 1
		jump DropUnneededTilEmpty lessThan unneededI 100

Pickup:
	set startTick @tick
	op min amount amount cap
	set pickupI 0
	LoopUntilFull:
		ucontrol itemTake source material amount
		op add pickupI pickupI 1
		sensor carried mule @totalItems 
		jump FinishRun greaterThanEq pickupI 100
		jump LoopUntilFull lessThan carried amount
	
Deliver:
	ucontrol approach factoryX factoryY dropRange
	set deliverI 0
	LoopUntilEmpty:
		ucontrol itemDrop factory carried
		sensor carried mule @totalItems
		jump FinishRun equal carried 0
		op add deliverI deliverI 1
		jump LoopUntilEmpty lessThan deliverI 100

FinishRun:
	jump Start always
	#jump Start equal mule null
	op sub elapsed @tick startTick
	jump Start lessThan elapsed maxTick

ReleaseMule:
	ucontrol flag 0
	ucontrol approach sourceX sourceY 5
	set mule null
	jump Start always
	


