Initialize:
	printflush message1
	set sourceMin 500

GetLinks:
	set factory factory1
	set memory cell1
	jump GetLinks equal factory null
	jump GetLinks equal memory null
	sensor factoryX factory @x
	sensor factoryY factory @y

FindCore:
	ubind @flare
	jump LocateCore notEqual @unit null
	print "Build a flare first"
	jump FindError always

LocateCore:
	ulocate building core false @copper sourceX sourceY found source
	jump Start equal found 1
	print "Core not found"

FindError:
	printflush message1
	jump FindCore always

Start:
CheckFactory:	
	print "Check factory\n"
	sensor buildType factory @config
	jump CheckCrawler equal buildType @crawler
	jump CheckNova equal buildType @nova
	
CheckDagger:	
	set stockLevel 20
	sensor facSil factory @silicon
	sensor facLead factory @lead
	jump CheckSilicon lessThan facSil facLead
	jump CheckLead always
	
CheckCrawler:
	set stockLevel 20
	sensor facSil factory @silicon
	sensor facCoal factory @coal
	jump CheckSilicon lessThan facSil facCoal
	jump CheckCoal always
	
CheckNova:
	sensor facSil factory @silicon
	sensor facLead factory @lead
	sensor facTit factory @titanium
	op div silLevel facSil 60
	op div leadLevel facLead 40
	op div titLevel facTit 40
	
	FindMin:
		jump MinSil lessThan silLevel leadLevel
		jump MinLead always
	MinSil:
		set stockLevel 60
		jump CheckSilicon lessThan silLevel titLevel
	MinLead:
		set stockLevel 40
		jump CheckLead lessThan leadLevel titLevel
		jump CheckTitanium always

CheckSilicon:
	op sub needed stockLevel facSil
	set material @silicon
	set matIndex 9
	set facStock facSil
	jump CheckStock greaterThan needed 0
	jump FactoryFull always
	
CheckLead:
	op sub needed stockLevel facLead
	set material @lead
	set matIndex 1
	set facStock facLead
	jump CheckStock greaterThan needed 0
	jump FactoryFull always

CheckCoal:
	op sub needed stockLevel facCoal
	set material @coal 
	set matIndex 4
	set facStock facCoal
	jump CheckStock greaterThan needed 0
	jump FactoryFull always

CheckTitanium:
	op sub needed stockLevel facTit
	set material @titanium
	set matIndex 6
	set facStock facTit
	jump FactoryFull equal needed 0

CheckStock:
	op sub neededStock stockLevel facStock
	sensor sourceStock source material
	op sub available sourceStock sourceMin
	op max available available 0
	jump NotEnoughStock lessThanEq available 0
	op min amount available neededStock
	jump WriteResult greaterThan amount 0	

FactoryFull:
	print "Factory full\n"
	set matIndex -1
	jump WriteResult always

NotEnoughStock:
	print "Not enough "
	print material 
	print " available "
	print available
	print "\n"
	set matIndex -1

WriteResult:
	write matIndex memory 0
	write amount memory 1
	printflush message1
	jump Start always




