Initialize:
	printflush message1
	set sourceMin 500
	set factory reconstructor1
	set memory cell1
	sensor factoryX factory @x
	sensor factoryY factory @y
	
FindCore:
	ubind @poly
	jump LocateCore notEqual @unit null
	print "Build a poly first"
	jump FindError always

LocateCore:
	ulocate building core false @copper sourceX sourceY found source
	jump Start equal found 1
	print "Core not found"

FindError:
	printflush message1
	jump FindCore always

Start:
	sensor facSil factory @silicon
	sensor facGlass factory @metaglass
	sensor facTit factory @titanium
	op div silLevel facSil 260
	op div glassLevel facGlass 80
	op div titLevel facTit 160
	
	FindMin:
		jump MinSil lessThan silLevel glassLevel
		jump MinGlass always
	MinSil:
		set stockLevel 260
		jump CheckSilicon lessThan silLevel titLevel
	MinGlass:
		set stockLevel 80
		jump CheckGlass lessThan glassLevel titLevel
		set stockLevel 160
		jump CheckTitanium always

CheckSilicon:
	op sub needed stockLevel facSil
	set material @silicon
	set matIndex 9
	set facStock facSil
	jump CheckStock greaterThan needed 0
	jump FactoryFull always

CheckGlass:
	op sub needed stockLevel facGlass
	set material @metaglass
	set matIndex 2
	set facStock facGlass
	jump CheckStock greaterThan needed 0
	jump FactoryFull always

CheckTitanium:
	op sub needed stockLevel facTit
	set material @titanium
	set matIndex 6
	set facStock facTit
	jump FactoryFull equal needed 0

CheckStock:
	op sub neededStock stockLevel facStock
	sensor sourceStock source material
	op sub available sourceStock sourceMin
	op max available available 0
	jump NotEnoughStock lessThanEq available 0
	op min amount available neededStock
	jump WriteResult greaterThan amount 0	

FactoryFull:
	print "Factory full\n"
	set matIndex -1
	jump WriteResult always

NotEnoughStock:
	print "Not enough "
	print material 
	print " available "
	print available
	print "\n"
	set matIndex -1
		
WriteResult:
	write matIndex memory 0
	write amount memory 1
	printflush message1
	jump Start always

