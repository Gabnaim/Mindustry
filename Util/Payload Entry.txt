Initialize:
	set maxUnits 4
	set unitType @zenith
	set radius 5

	op shl procId @thisx 10 # first 10 bit for x
	op add procId procId @thisy # second 10 bit for y

	set STARTING 0
	set MOVING 1
	set ARRIVED 2
	set status STARTING

GetLinks:
	GetEntry:
		set entry conveyor1
		jump GetEntry equal entry null
	GetSwitch:
		set switch switch1
		jump GetSwitch equal switch null

	sensor moveX entry @x
	sensor moveY entry @y


Start:
CheckActive:
	sensor active switch @enabled
	jump Reset equal active false

	jump Start equal status ARRIVED
	jump Proceed equal status MOVING
	
StartMove:
	print "Starting move\n"
	set i 0
	set firstUnit null

	MoveLoop:
		Bind:
			ubind unitType
			jump Start equal @unit null
			sensor isDead @unit @dead
			jump MoveLoop equal isDead true

			jump FinishMoveGroup equal firstUnit @unit
			jump FinishMoveGroup greaterThanEq i maxUnits
			jump ProcessMove notEqual firstUnit null
			set firstUnit @unit
		
		ProcessMove:
			sensor flag @unit @flag
			jump MoveLoop notEqual flag 0

			ucontrol flag procId
			op add i i 1
			ucontrol approach moveX moveY radius
			jump MoveLoop always
		
		FinishMoveGroup:
			set totalFlagged i
			set firstUnit null
			set status MOVING
			jump Start always

Proceed:
	print "Proceeding\n"
	set firstUnit null
	set i 0

	ProceedLoop:
		Bind:
			ubind unitType
			jump Start equal @unit null
			sensor isDead @unit @dead
			jump ProceedLoop equal isDead true

			jump FinishProceed equal firstUnit @unit
			jump FinishProceed greaterThanEq i totalFlagged
			jump Navigate notEqual firstUnit null
			set firstUnit @unit
		
		Navigate:
			sensor flag @unit @flag
			jump MoveLoop notEqual flag procId

			ucontrol within moveX moveY radius isNear
			jump MoveLoop equal isNear false

			ucontrol move moveX moveY
			wait 1
			ucontrol payEnter
			ucontrol flag 0
			ucontrol unbind
			op add i i 1

			jump ProceedLoop always
 
		FinishProceed:
			

FinishRun:
	set status ARRIVED
	print "\nFlagged: "
	print totalFlagged
	printflush message1
	jump Start always
	
Reset:
	set status STARTING
	printflush message1
	jump Start always
	
	

