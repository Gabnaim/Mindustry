Initialize:
	set unitType @flare
	printflush message1
	set showFlag true
	set showCarried false
	set showHealth false
	op or showLine showFlag showCarried
	op or showLine showLine showHealth

Start:
BindUnit:
	ubind unitType
	jump Start equal @unit null
	sensor dead @unit @dead
	jump BindUnit equal dead true

ProcessUnit:
	jump Next equal showLine false
	set hasData false
	PrintFlag:
		jump PrintCarried equal showFlag false
		sensor flag @unit @flag
		jump PrintCarried equal flag 0
		set hasData true
		print flag
		print " "
	
	PrintCarried:
		jump PrintHealth equal showCarried false
		sensor carried @unit @totalItems
		jump PrintHealth equal carried 0
		sensor material @unit @firstItem
		set hasData true
		print carried
		print " "
		print material
		print " "

	PrintHealth:
		jump PrintEnd equal showHealth false
		sensor maxHealth @unit @maxHealth
		sensor health @unit @health
		jump PrintEnd equal health maxHealth
		op mul health health 100
		op idiv healthPct health maxHealth
		set hasData true
		print healthPct
		print "%"
		
	PrintEnd:
		jump Next equal hasData false
		print "\n"
	
Next:
	op add units units 1
	jump SetFirst equal firstUnit null
	jump FinishGroup equal firstUnit @unit
	jump Start always
	
SetFirst:
	set firstUnit @unit
	jump Start always
	
FinishGroup:
	print unitType
	print ": "
	print units
	print "\n"
	set units 0
	printflush message1
	jump Start always
