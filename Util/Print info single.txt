Initialize:
	set unitType @flare
	printflush message1
	set showFlag true
	set showCarried false
	set showHealth false
	set showDead false
	op or showLine showFlag showCarried
	op or showLine showLine showHealth
	op or showLine showLine showDead
	op equal skipDead showDead false

Start:
Bind:
	ubind unitType
	jump NoUnits equal @unit null
	sensor isDead @unit @dead
	op and skipDead skipDead isDead
	jump Start equal skipDead true
	jump FinishGroup equal firstUnit @unit
	jump ProcessUnit notEqual firstUnit null

SetFirst:
	set firstUnit @unit

ProcessUnit:
	jump Next equal showLine false
	set hasData false
	PrintFlag:
		jump PrintCarried equal showFlag false
		sensor flag @unit @flag
		jump PrintCarried equal flag 0
		set hasData true
		print flag
		print " "
	
	PrintCarried:
		jump PrintHealth equal showCarried false
		sensor carried @unit @totalItems
		jump PrintHealth equal carried 0
		sensor material @unit @firstItem
		set hasData true
		print carried
		print " "
		print material
		print " "

	PrintHealth:
		jump PrintDead equal showHealth false
		sensor maxHealth @unit @maxHealth
		sensor health @unit @health
		jump PrintEnd equal health maxHealth
		op mul health health 100
		op idiv healthPct health maxHealth
		set hasData true
		print healthPct
		print "%"

	PrintDead:
		jump PrintEnd equal showDead false
		jump PrintEnd equal isDead false
		set hasData true
		print " dead"
		
	PrintEnd:
		jump Next equal hasData false
		print "\n"
	
Next:
	op add units units 1
	jump Start always
	
FinishGroup:
	print unitType
	print ": "
	print units
	print "\n"
	set units 0
	set firstUnit null
	printflush message1
	jump Start always

NoUnits:
	print "No "
	print unitType
	print "s were found"
	printflush message1
	jump Start always

