set name "Unit Info"

Initialize:
	set useMemory true
	set unitType @poly
	set UNIT_TYPE_ADDR 0

	set showFlag true
	set showCarried true
	set showHealth true

	op or showLine showFlag showCarried
	op or showLine showLine showHealth

GetLinks:
	set memory cell1
	jump Start equal useMemory false
	jump GetLinks equal memory null

	set cycleStart @time

Start:
	set lastUnitType unitType
	jump Process equal useMemory false

ReadUnitType:
	read unitTypeId memory UNIT_TYPE_ADDR
	jump InvalidType lessThan unitTypeId 0
	jump InvalidType greaterThan unitTypeId 55
	lookup unit unitType unitTypeId
	jump Reset notEqual unitType lastUnitType

Process:
	ubind unitType
	jump NoUnits equal @unit null
	set units 0
	set firstUnit @unit
	jump ProcessUnit always

	UnitLoop:
		ubind unitType
		jump FinishGroup equal firstUnit @unit
		sensor isFirstDead firstUnit @dead
		jump Start equal isFirstDead true
	
	ProcessUnit:
		jump Next equal showLine false
		set hasData false
	
		PrintFlag:
			jump PrintCarried equal showFlag false
			sensor flag @unit @flag
			jump PrintCarried equal flag 0
			set hasData true
			print flag
			print " "
		
		PrintCarried:
			jump PrintHealth equal showHealth false
			sensor carried @unit @totalItems
			jump PrintHealth equal carried 0
			sensor material @unit @firstItem
			set hasData true
			print carried
			print " "
			print material
			print " "
	
		PrintHealth:
			jump PrintEnd equal showHealth false
			sensor maxHealth @unit @maxHealth
			sensor health @unit @health
			jump PrintEnd equal health maxHealth
			op mul health health 100
			op idiv healthPct health maxHealth
			set hasData true
			print healthPct
			print "%"
			
		PrintEnd:
			jump Next equal hasData false
			print "\n"
	
	Next:
		op add units units 1
		jump UnitLoop always
	
FinishGroup:
	print unitType
	print ": "
	print units
	jump Reset always

NoUnits:
	print "No "
	print unitType
	print "s were found"
	jump Reset always

InvalidType:
	print "Invalid unit type"

Reset:
	printflush message1
	op sub cycleTime @time cycleStart
	set cycleStart @time
	jump Start always

