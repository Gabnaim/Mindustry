Initialize:
	printflush message1
	set maxUnits 4
	set unitType @flare
	set runCount 0
	set unitCount 0

GetLinks:
	set switch switch1
	jump GetLinks equal switch null

Start:	
CheckActive:
	sensor active switch @enabled
	jump Bind equal active true

	set unitCount 0
	set runCount 0
	set runFlag 0
	set firstUnit null
	jump Start always
	
Bind:
	ubind unitType
	jump Start equal @unit null
	sensor isDead @unit @dead
	jump Start equal isDead true
	op equal isFirst firstUnit null

	# ignore unit if max is reached
	jump IgnoreUnit greaterThanEq unitCount maxUnits
	jump ProcessUnit equal isFirst false
	set firstUnit @unit

ProcessUnit:
	 # do stuff with unit
	op add processFlag unitCount 1
	op add processFlag processFlag runFlag
	ucontrol flag processFlag
	jump Next always

IgnoreUnit:
	op mul ignoreFlag runFlag 10
	op add ignoreFlag ignoreFlag 99
	ucontrol flag ignoreFlag

Next:
	op add unitCount unitCount 1
	sensor currentFlag @unit @flag
	print currentFlag
	print "\n"
	jump MaxReached equal unitCount maxUnits
	jump Start equal isFirst true
	jump FinishGroup equal firstUnit @unit
	jump Start always

MaxReached:
	sensor currentFlag @unit @flag
	op mul maxFlag currentFlag -1
	ucontrol flag maxFlag
	print "Max reached at "
	print unitCount
	print "\n"
	jump Start notEqual firstUnit @unit

FinishGroup:
	set lastCount unitCount
	set unitCount 0
	op add runCount runCount 1
	op mul runFlag runCount 10

	print "Total: "
	print lastCount
    print "\nRun: "
	print runCount
	printflush message1
	wait 5
	jump Start always




	


