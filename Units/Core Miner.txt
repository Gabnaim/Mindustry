set name "Core Miner"
Initialize:
	set unitType @poly
	set miningRange 8.5
	set dropRange 7
	set minMetals 1000

	set ores 4
	set ore1 @copper
	set ore2 @lead
	set ore3 @coal
	set ore4 @sand
	
	GetStartInfo:
		ubind unitType
		jump GetStartInfo equal @unit null
		ulocate building core false 0 coreX coreY coreFound core
		sensor maxStock core @itemCapacity
		sensor cap @unit @itemCapacity

Start:
BindUnit:
	ubind unitType
	jump Start equal @unit null
	sensor isDead @unit @dead
	jump Start equal isDead true
	sensor flag @unit @flag
	jump Start notEqual flag 0

	sensor isMining @unit @mining
	sensor carried @unit @totalItems
	sensor carriedItem @unit @firstItem
	jump DropItems greaterThanEq carried cap

CheckStock:
	set i 0
	set min 99999
	MinLoop:
		op mul offset i 2
		op add offset offset 1
		op add arrayLoc @counter offset
		set @counter arrayLoc
	
		set ore ore1
		jump GetStock always
		set ore ore2
		jump GetStock always
		set ore ore3
		jump GetStock always
		set ore ore4
	
		GetStock:
			sensor stock core ore
			jump CheckMin greaterThan i 1
			op sub stock stock minMetals

		CheckMin:
			jump MinNext greaterThanEq stock min
			set min stock
			set minOre ore

	MinNext:
		op add i i 1
		jump MinLoop lessThan i ores

	set minedOre minOre
	ulocate ore core true minedOre oreX oreY oreFound oreMine

SelectAction:
	jump MoveToOre equal carried 0
	jump DropItems notEqual carriedItem minedOre
	jump Start equal isMining true
	
Mine:
	MoveToOre:
		ucontrol within oreX oreY miningRange isNearMine
		jump MineOre equal isNearMine true
		ucontrol boost true
		ucontrol approach oreX oreY miningRange
		jump Start always
	
	MineOre:
		ucontrol mine oreX oreY
		jump Start always

	DropItems:
		ucontrol within coreX coreY dropRange isNearDrop
		jump DropLoop equal isNearDrop true
		ucontrol boost true
		ucontrol approach coreX coreY dropRange
		jump Start always
	
		DropLoop:
			set dropI 0
			ucontrol boost false
			sensor carried @unit @totalItems
			LoopUntilEmpty:
				ucontrol itemDrop core carried
				sensor carried @unit @totalItems
				jump Start equal carried 0
				op add dropI dropI 1
				jump LoopUntilEmpty lessThan dropI 100
			jump Start always