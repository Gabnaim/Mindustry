set name "Mule Flagger"

Initialize:
	set unitType @flare
	set switch switch1
	set status "INITIALIZE"
	jump Initialize equal switch null
	set releaseWaitSecs 5
	set error " "

	op shl procId @thisx 9
	op add procId procId @thisy
	op mul releaseWaitMs releaseWaitSecs 1000

	op add nearX @thisx 1
	op add nearY @thisy 1
	op add farX @thisx 15
	op add farY @thisy 15

	set releaseStart @time

Start:
	op sub releaseWait @time releaseStart
	jump Release greaterThanEq releaseWait releaseWaitMs
	
	sensor active switch @enabled
	jump Start equal active false

CheckMule:
	jump FindMule equal mule null
	sensor muleDead mule @dead
	jump FindMule equal muleDead true

	sensor muleFlag mule @flag
	jump StartRun equal muleFlag procId
	jump FindMule notEqual muleFlag 0
	RecycleMule:
		ubind mule
		ucontrol flag procId
		jump StartRun always

FindMule:
	set firstUnit null
	set free 0
	set status "FIND"

	FindLoop:
		ubind unitType
		jump NotFound equal @unit null
		sensor unitDead @unit @dead
		jump FindLoop equal unitDead true
	
		jump FinishCount equal firstUnit @unit
		jump FlagProcess notEqual firstUnit null
		set firstUnit @unit
	
	FlagProcess:
		sensor flag @unit @flag
		jump UseMule equal flag procId
		jump FindLoop notEqual flag 0
		sensor controlled @unit @controlled
		jump UseMule lessThan controlled 2
		jump FindLoop always
	
	FinishCount:
		jump NotFound equal mule null
		jump FindDone always
	
	NotFound:
		set error "No free units"
		jump Start always
	
	FlagMule:
		ucontrol flag procId
	
	UseMule:
		set mule @unit
	
	FindDone:
		set error " "

StartRun:
	set releaseStart @time
	jump MoveFar equal status "MOVEFAR"

	MoveNear:
		ucontrol approach nearX nearY 3
		ucontrol within nearX nearY 4 isNear
		set status "MOVENEAR"
		jump Next equal isNear false

	MoveFar:
		ucontrol approach farX farY 3
		ucontrol within farX farY 4 isFar
		set status "MOVEFAR"
		jump MoveNear equal isFar true

	Next:
		jump Start always

Release:
	set releaseStart @time
	jump Start equal status "IDLE"
	set status "RELEASE"
	sensor carriedMat @unit @firstItem
	jump ReleaseUnit equal carriedMat null

	Dump:
		ucontrol approach sourceX sourceY dropRange
		ucontrol within sourceX sourceY dropRange isNear
		jump Dump equal isNear false
	
		SourceDump:
			ucontrol itemDrop source 99
			sensor carried @unit @totalItems
			jump ReleaseUnit equal carried 0
			# drop to air if source is full
			ucontrol itemDrop @air cap
	
	ReleaseUnit:
		ucontrol stop
		ucontrol flag 0
		ucontrol boost false
		ucontrol unbind
		set status "IDLE"
		set releaseStart @time
		jump Start always

