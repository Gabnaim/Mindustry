Initialize:
	set displays 4
	set maxDigits 16
	set decimals 4
	
	jump Initialize greaterThan displays 8

	GetLinks:
		op add minLinks displays 1
		jump GetLinks lessThan @links minLinks

		set l 0
		set displayI 0
		LinkLoop:
			getlink link l
			sensor type link @type
			jump FoundCell equal type @memory-cell
			jump FoundBank equal type @memory-bank
			jump FoundLargeDisplay equal type @large-logic-display
			jump NextLink always
			FoundLargeDisplay:
				set display link
				set display link
				sensor linkName link @name
				op add arrayReturn @counter 1
				jump SetDisplay always
				op add displayI displayI 1
				jump NextLink always
			FoundCell:
				set memory link
				set cap 64
				jump NextLink always
			FoundBank:
				set memory link
				set cap 512
			NextLink:
				op add l l 1
				jump LinkLoop lessThan l @links
	
			jump GetLinks equal memory null
			jump GetLinks lessThan displayI displays

		EndGetLinks:

	op pow roundMult 10 decimals
	op pow maxInt 10 maxDigits

	set displaySize 176
	set maxRows 16
	set charsPerRow 24
	op div slots cap displays
	op ceil slots slots

	SetColors:
		set bgColor %000000
		set gray %505050
		set fontColor %ffff99
		set imgColor %ffffff

	SetSpacing:
		set colSpacing 2
		set charSpacing 2
		op div halfColSp colSpacing 2

	Preread:
		set i 0
		set usedSlots 0
		PrereadLoop:
			read stored memory i
			jump NextPreread equal stored 0
			op add usedSlots usedSlots 1
			NextPreread:
				op add i i 1
				jump Preread lessThan i cap


Start:
	jump GetLinks lessThan @links minLinks
	set displayI 0
	set used 0
	
	DisplayLoop:
		op mul minI slots displayI
		op add maxI minI slots

		op add arrayReturn @counter 1
		jump GetDisplay always

		set i minI
		ReadLoop:
			read stored memory i
			jump NextSlot equal stored 0
			op floor rounded stored
			jump Print equal rounded stored

			Round:
				op mul rounded stored roundMult
				op add rounded rounded 0.5
				op floor rounded rounded
				op div rounded rounded roundMult
				
			Print:
				print i
				print " "
				print rounded
				print "\n"
			
			op add used used 1

		NextSlot:
			op add i i 1
			jump ReadLoop lessThan i maxI
		FinishDisplay:
			printflush display
			
	NextDisplay:
		op add displayI displayI 1
		jump DisplayLoop lessThan displayI displays

Finish:
	set usedSlots used
	jump Start always

#---------------------------------------------
# Draw Numbers
#---------------------------------------------
Draw0:
	draw lineRect curX curY charWidth charHeight
	jump NextDigit always

Draw1:
	op add rightX curX rightOffset
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw2:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX curY stroke halfVertH
	draw lineRect rightX midY stroke halfVertH
	jump NextDigit always
	
Draw3:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw4:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX midY stroke halfRectH
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw5:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX midY stroke halfVertH
	draw lineRect rightX curY stroke halfVertH
	jump NextDigit always
	
Draw6:
	draw lineRect curX curY charWidth halfRectH
	draw lineRect curX topY charWidth stroke
	draw lineRect curX midY stroke halfVertH
	jump NextDigit always

Draw7:
	op add rightX curX rightOffset
	draw lineRect curX topY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw8:
	draw lineRect curX curY charWidth charHeight
	draw lineRect curX midY charWidth stroke
	jump NextDigit always

Draw9:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth halfRectH
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke halfVertH
	jump NextDigit always

DrawDot:
	draw lineRect curX curY stroke stroke
	jump NextDigit always

DrawMinus:
	draw lineRect curX midY charWidth stroke
	jump NextDigit always

DrawPlus:
	draw lineRect curX midY charWidth stroke
	draw lineRect curX curY stroke charHeight
	jump NextDigit always

#-------------------------------------------------
# Array:
#-------------------------------------------------
SetDisplay:
	op mul offset displayI 2
	op add @counter @counter offset

	set value0 display
	set @counter arrayReturn
	set value1 display
	set @counter arrayReturn
	set value2 display
	set @counter arrayReturn
	set value3 display
	set @counter arrayReturn
	set value4 display
	set @counter arrayReturn
	set value5 display
	set @counter arrayReturn
	set value6 display
	set @counter arrayReturn
	set value7 display
	set @counter arrayReturn
	
GetDisplay:
	op mul offset displayI 2
	op add @counter @counter offset

	set display value0
	set @counter arrayReturn
	set display value1
	set @counter arrayReturn
	set display value2
	set @counter arrayReturn
	set display value3
	set @counter arrayReturn
	set display value4
	set @counter arrayReturn
	set display value5
	set @counter arrayReturn
	set display value6
	set @counter arrayReturn
	set display value7
	set @counter arrayReturn