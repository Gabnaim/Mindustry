set name "Display Unit Counts"

Initialize:
	set minI 0
	set maxI 18
	GetLinks:
		jump GetLinks lessThan @links 2
		set countsCell cell1
		set cacheCell cell2
		set display display1
		set switch switch1
		jump GetLinks equal display null
		jump GetLinks equal countsCell null
		jump GetLinks equal cacheCell null
		jump GetLinks equal switch null

	set displaySize 176
	op equal isMainProc minI 0

	SetColors:
		set bgColor %000000
		set gray %505050
		set mainFontColor %ffff99
		set changedFontColor %ff0000
		set imgColor %ffffff

	CalcGrid:
		set columns 5
		set rows 7
		set colSpacing 2
		set charSpacing 2
		set imageSize 16
		set rowOffset 25
		set colOffset 35
		op sub colWidth colOffset colSpacing
		op div halfColSp colSpacing 2
		op idiv imagePos imageSize 2

	CalcFont:
		set charHeight 14
		set charWidth 7
		op sub rowSpacing rowOffset charHeight
		op div halfRowSp rowSpacing 2
		op add charOffset charWidth charSpacing
		set stroke 2	

	CalcArea:
		op sub topBounds displaySize halfRowSp
		op sub topRowY topBounds charHeight
		set leftBounds halfColSp
		op add leftColX leftBounds colWidth

	CalcFontDrawParams:
		op mul temp stroke 3
		op sub temp charHeight temp
		op div temp temp 2
		op floor midOffset temp 
		op add midOffset midOffset stroke
		op sub topOffset charHeight stroke
		op sub rightOffset charWidth stroke
		op sub halfRectH charHeight midOffset
		op sub halfVertH halfRectH stroke
		
ClearCache:
	set i minI
	ClearCacheLoop:
		write -1 cacheCell i
		op add i i 1
		jump ClearCacheLoop lessThan i 35

	set lastRow -1

	jump StartCycle equal isMainProc false
	control enabled switch false
	jump StartCycle always
		
Start:
	jump StartCycle equal isMainProc false
	sensor active switch @enabled
	jump ClearCache equal active true

StartCycle:
	op sub cycleTime @time cycleStart
	set cycleStart @time
	set i minI
	draw stroke stroke

StartCell:
	Read:
		read unitCount countsCell i
		read lastCount cacheCell i
		jump NextUnit equal unitCount lastCount

	CheckUpdated:
		op mul updatedCount unitCount -1
		jump RevertUpdated equal updatedCount lastCount
		
	MarkUpdated:
		write updatedCount cacheCell i
		set fontColor changedFontColor
		jump ChangeCol always

	RevertUpdated:
		write unitCount cacheCell i
		set fontColor mainFontColor
		
	ChangeCol:	
		op mod col i columns
		op mul xOffset col colOffset
		op add curX leftColX xOffset
		op sub colStart curX colWidth
		op add imageX colStart imagePos

	ChangeRow:
		op idiv row i columns
		jump EndChangeRow equal row lastRow
		op mul yOffset rowOffset row
		op sub curY topRowY yOffset
		op add midY curY midOffset
		op add topY curY topOffset
		op sub clearY curY halfRowSp
		set lastRow row
	EndChangeRow:

	ClearLine:	
		draw col bgColor
		draw rect colStart clearY colOffset rowOffset
		
	SetImageColor:
		draw col imgColor
		jump DrawImage greaterThan unitCount 0
		draw col gray
		
	DrawImage:
		lookup unit unitType i
		draw image imageX midY unitType imageSize

	PrintNumber:
		jump NextUnit equal unitCount 0	
		draw col fontColor
		
	PrintDigits:
		op mod digit unitCount 10
		op idiv unitCount unitCount 10
		
	DrawDigit:
		op sub curX curX charOffset
		op add @counter @counter digit
		jump Draw0 equal digit 0
		jump Draw1 equal digit 1
		jump Draw2 equal digit 2
		jump Draw3 equal digit 3
		jump Draw4 equal digit 4
		jump Draw5 equal digit 5
		jump Draw6 equal digit 6
		jump Draw7 equal digit 7
		jump Draw8 equal digit 8
		jump Draw9 equal digit 9
	
	NextDigit:
		jump PrintDigits greaterThan unitCount 0

	drawflush display

	NextUnit:
		op add i i 1
		jump StartCell lessThan i maxI

Done:
	drawflush display
	jump Start always

#---------------------------------------------
# Draw Numbers
#---------------------------------------------
Draw0:
	draw lineRect curX curY charWidth charHeight
	jump NextDigit always

Draw1:
	op add rightX curX rightOffset
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw2:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX curY stroke halfVertH
	draw lineRect rightX midY stroke halfVertH
	jump NextDigit always
	
Draw3:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw4:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX midY stroke halfRectH
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw5:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX midY stroke halfVertH
	draw lineRect rightX curY stroke halfVertH
	jump NextDigit always
	
Draw6:
	draw lineRect curX curY charWidth halfRectH
	draw lineRect curX topY charWidth stroke
	draw lineRect curX midY stroke halfVertH
	jump NextDigit always

Draw7:
	op add rightX curX rightOffset
	draw lineRect curX topY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw8:
	draw lineRect curX curY charWidth charHeight
	draw lineRect curX midY charWidth stroke
	jump NextDigit always

Draw9:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth halfRectH
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke halfVertH
	jump NextDigit always
