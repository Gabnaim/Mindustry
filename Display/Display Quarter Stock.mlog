Initialize:
	set minI 0
	set maxI 4
	
	set leftBounds 6
	set rightBounds 86
	set topBounds 166
	set bottomBounds 86

	set bgLeft 0
	set bgBottom 88
	set bgWidth 88
	set bgHeight 88

	# if the core is not linked, we need a unit to 
	# find the core
	set unitType @flare

	GetLinks:
		set i 0
		LinkLoop:
			getlink link i
			sensor type link @type

			jump FoundDisplay equal type @large-logic-display
			jump FoundCore equal type @core-shard
			jump FoundCore equal type @core-foundation
			jump FoundCore equal type @core-nucleus
			jump NextLink always

			FoundCore:
				set core link
				jump NextLink always
			FoundDisplay:
				set display link
			NextLink:
				op add i i 1
				jump LinkLoop lessThan i @links
			jump GetLinks equal display null
			jump EndLinks notEqual core null

		FindCore:
			ubind unitType
			jump LocateCore notEqual @unit null
			ubind @flare
			jump LocateCore notEqual @unit null
			ubind @mono
			jump LocateCore notEqual @unit null
			ubind @poly
			jump LocateCore notEqual @unit null
			ubind @mega
			jump LocateCore notEqual @unit null
			ubind @nova
			jump LocateCore notEqual @unit null
			ubind @dagger
			jump LocateCore notEqual @unit null
			ubind @crawler
			jump LocateCore notEqual @unit null
			ubind @pulsar
			jump LocateCore notEqual @unit null
			ubind @quasar
			jump LocateCore notEqual @unit null
			
			set error "Seriously, build a unit"
			jump GetLinks always

		LocateCore:
			ulocate building core false 0 coreX coreY coreFound core
			jump GetLinks equal core false
		EndLinks:
			

	set stroke 2
	set charSpacing 2
	set rowSpacing 4
	set charHeight 16
	set charWidth 10

	set midOffset 7
	set topOffset 14
	set segment 8
	set halfRectH 9
	op add charOffset charWidth charSpacing
	op add rowOffset charHeight rowSpacing

	op sub topMargin 

	set clearWidth bgWidth
	set clearHeight rowOffset
	set clearX bgLeft
	
	set bgColor %000000
	set fontColor %ffff99
	set imgColor %ffffff

	set imageSize charHeight
	op idiv imagePos imageSize 2
	op add imageX leftBounds imagePos
	op sub imageY topBounds imagePos

	draw col bgColor
	set marginClearY 0
	jump Start equal bgBottom 0
	set marginClearY 166
	
Start:
	set startTime @time
	draw stroke stroke
	set i minI
	op sub curY topBounds charHeight
	draw rect clearX marginClearY clearWidth 10
	
StartLine:
	set curX rightBounds
	op add midY curY midOffset
	op add topY curY topOffset
	ClearLine:
		draw rect clearX curY clearWidth clearHeight
		
	GetMaterial:
		lookup item material i
		draw col imgColor
		draw image imageX midY material imageSize
		sensor value core material
		
	PrintDigits:
		op mod digit value 10
		op idiv value value 10
		
	DrawDigit:
		op sub curX curX charOffset
		draw col fontColor
		op add @counter @counter digit
		jump Draw0 equal digit 0
		jump Draw1 equal digit 1
		jump Draw2 equal digit 2
		jump Draw3 equal digit 3
		jump Draw4 equal digit 4
		jump Draw5 equal digit 5
		jump Draw6 equal digit 6
		jump Draw7 equal digit 7
		jump Draw8 equal digit 8
		jump Draw9 equal digit 9
	
	NextDigit:
		jump PrintDigits greaterThan value 0
	
MoveToNextLine:
	drawflush display
	op sub curY curY rowOffset
	draw col bgColor
	op add i i 1
	jump StartLine lessThan i maxI

Done:
	op sub cycleTime @time startTime
	jump Start always

Draw0:
	draw lineRect curX curY charWidth charHeight
	jump NextDigit always

Draw1:
	op add rightX curX segment
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw2:
	op add rightX curX segment
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX curY stroke segment
	draw lineRect rightX midY stroke segment
	jump NextDigit always
	
Draw3:
	op add rightX curX segment
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw4:
	op add rightX curX segment
	draw lineRect curX midY charWidth stroke
	draw lineRect curX midY stroke segment
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw5:
	op add rightX curX segment
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX midY stroke segment
	draw lineRect rightX curY stroke segment
	jump NextDigit always
	
Draw6:
	draw lineRect curX curY charWidth halfRectH
	draw lineRect curX topY charWidth stroke
	draw lineRect curX midY stroke segment
	jump NextDigit always

Draw7:
	op add rightX curX segment
	draw lineRect curX topY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw8:
	draw lineRect curX curY charWidth charHeight
	draw lineRect curX midY charWidth stroke
	jump NextDigit always

Draw9:
	op add rightX curX segment
	draw lineRect curX midY charWidth halfRectH
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke segment
	jump NextDigit always



	