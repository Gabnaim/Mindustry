Initialize:
	set autoItems true
	set maxItems 4

	GetLinks:
		jump GetLinks lessThan @links 2
		set i 0
		LinkLoop:
			getlink link i
			sensor type link @type
			jump FoundDisplay equal type @logic-display
			sensor cap link @itemCapacity
			jump NextLink lessThan cap 10
			FoundContainer:
				set source link
				jump NextLink always
			FoundDisplay:
				set display link
			NextLink:
				op add i i 1
				jump LinkLoop lessThan i @links
			jump GetLinks equal display null
			jump GetLinks equal source null

	set leftBounds 2
	set rightBounds 78
	set topBounds 78
	set bottomBounds 2

	set stroke 2
	set charSpacing 2
	set rowSpacing 4
	set charHeight 16
	set charWidth 10

	set midOffset 7
	set topOffset 14
	set segment 8
	set halfRectH 9
	op add charOffset charWidth charSpacing
	op add rowOffset charHeight rowSpacing

	set clearWidth 80
	set clearHeight 20
	
	set bgColor %000000
	set fontColor %ffff99
	set imgColor %ffffff

	set imageSize charHeight
	op idiv imagePos imageSize 2
	op add imageX leftBounds imagePos
	op sub imageY topBounds imagePos

	draw col bgColor
	draw clear bgColor
	drawflush display

Start:
	set startTime @time
	draw stroke stroke
	set i 0
	op sub curY topBounds charHeight
	
StartLine:
	set curX rightBounds
	op add midY curY midOffset
	op add topY curY topOffset
	ClearLine:
		draw rect clearX curY clearWidth clearHeight
		
	GetMaterial:
		lookup item material i
		sensor value source material
		jump NextItem equal value 0

		draw col imgColor
		draw image imageX midY material imageSize
		
	PrintDigits:
		op mod digit value 10
		op idiv value value 10
		
	DrawDigit:
		op sub curX curX charOffset
		draw col fontColor
		op add @counter @counter digit
		jump Draw0 equal digit 0
		jump Draw1 equal digit 1
		jump Draw2 equal digit 2
		jump Draw3 equal digit 3
		jump Draw4 equal digit 4
		jump Draw5 equal digit 5
		jump Draw6 equal digit 6
		jump Draw7 equal digit 7
		jump Draw8 equal digit 8
		jump Draw9 equal digit 9
	
	NextDigit:
		jump PrintDigits greaterThan value 0

	FinishLine:
		drawflush display
	
	NextLine:
		op sub curY curY rowOffset
		draw col bgColor
	
NextItem:
	op add i i 1
	jump StartLine lessThan i 16

Done:
	op sub cycleTime @time startTime
	jump Start always

Draw0:
	draw lineRect curX curY charWidth charHeight
	jump NextDigit always

Draw1:
	op add rightX curX segment
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw2:
	op add rightX curX segment
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX curY stroke segment
	draw lineRect rightX midY stroke segment
	jump NextDigit always
	
Draw3:
	op add rightX curX segment
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw4:
	op add rightX curX segment
	draw lineRect curX midY charWidth stroke
	draw lineRect curX midY stroke segment
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw5:
	op add rightX curX segment
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX midY stroke segment
	draw lineRect rightX curY stroke segment
	jump NextDigit always
	
Draw6:
	draw lineRect curX curY charWidth halfRectH
	draw lineRect curX topY charWidth stroke
	draw lineRect curX midY stroke segment
	jump NextDigit always

Draw7:
	op add rightX curX segment
	draw lineRect curX topY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw8:
	draw lineRect curX curY charWidth charHeight
	draw lineRect curX midY charWidth stroke
	jump NextDigit always

Draw9:
	op add rightX curX segment
	draw lineRect curX midY charWidth halfRectH
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke segment
	jump NextDigit always



	