Initialize:
	set minI 12
	set maxI 16

	set rows 16
	set quadSize 4

	set colSpacing 4
	
	set charHeight 16
	set charWidth 10
	set stroke 2
	set charSpacing 2
	set rowSpacing 4
	op add charOffset charWidth charSpacing
	op add rowOffset charHeight rowSpacing
	
	GetLinks:
		jump GetLinks lessThan @links 2
		set i 0
		LinkLoop:
			getlink link i
			sensor type link @type
			jump FoundDisplay equal type @logic-display
			jump FoundLargeDisplay equal type @large-logic-display
			sensor cap link @itemCapacity
			jump NextLink lessThan cap 10
			FoundContainer:
				set source link
				jump NextLink always
			FoundDisplay:
				set display link
				set displaySize 80
				set margin 2
				jump NextLink always
			FoundLargeDisplay:
				set display link
				set displaySize 176
				set margin 6
			NextLink:
				op add i i 1
				jump LinkLoop lessThan i @links
			jump GetLinks equal display null
			jump GetLinks equal source null

	CalcQuadrants:
		op mod quadLine rows quadSize
		op idiv quad rows quadSize	
		jump Quad2 equal quad 2
		jump Quad3 equal quad 3
		jump Quad4 equal quad 4
		FullArea:
			set gridCols 1
			set gridRows 1
			set quadCol 1
			set quadRow 1
			jump CalcArea always
		Quad2:
			set gridCols 1
			set gridRows 2
			set quadCol 1
			set quadRow 1
			jump CalcArea always
		Quad3:
			set gridCols 2
			set gridRows 2
			set quadCol 2
			set quadRow 2
			jump CalcArea always
		Quad4:
			set gridCols 2
			set gridRows 2
			set quadCol 2
			set quadRow 1
	
	CalcArea:
		op div bgWidth displaySize gridCols
		op div bgHeight displaySize gridRows
		op mul bgRight quadCol bgWidth
		op sub bgLeft bgRight bgWidth
		op mul bgTop quadRow bgHeight
		op sub bgBottom bgTop bgHeight
	
		op div halfColSp colSpacing 2
		op div halfRowSp rowSpacing 2

	GetHorizontalBounds:
		jump FullColBounds equal gridCols 1
		jump Col2Bounds equal quadCol 2
		Col1Bounds:
			op add leftBounds bgLeft margin
			op sub rightBounds bgRight halfColSp
			jump EndHorizontalBounds always
		Col2Bounds:
			op add leftBounds bgLeft halfColSp
			op sub rightBounds bgRight margin
			jump EndHorizontalBounds always
		FullColBounds:
			op add leftBounds bgLeft margin
			op sub rightBounds bgRight margin
		EndHorizontalBounds:

	GetVerticalBounds:
		jump FullRowBounds equal gridRows 1
		jump Row2Bounds equal quadRow 2
		Row1Bounds:
			op sub topBounds bgTop halfRowSp
			op add bottomBounds bgBottom margin
			set marginClearY bgBottom
			op add marginClearHeight margin halfRowSp
			jump EndVerticalBounds always
		Row2Bounds:
			op sub topBounds bgTop margin
			op sub topBounds topBounds rowSpacing
			op add bottomBounds bgBottom halfRowSp	
			set marginClearY topBounds
			op sub marginClearHeight bgTop marginClearY
			jump EndVerticalBounds always
		FullRowBounds:
			op sub topBounds bgTop margin
			op sub topBounds topBounds halfRowSp
			op add bottomBounds bgBottom margin
		EndVerticalBounds:
		
	
	CalcFontSizeParams:
		op mul strokes stroke 3
		op sub freeSpace charHeight strokes
		op div halfFreeH freeSpace 2
		op floor midOffset halfFreeH 
		op add midOffset midOffset stroke
		op sub topOffset charHeight stroke
		op sub rightOffset charWidth stroke
		op sub halfRectH charHeight midOffset
		op sub halfVertH halfRectH stroke
		op div halfRowSp rowSpacing 2

	SetColors:
		set bgColor %000000
		set fontColor %ffff99
		set imgColor %ffffff

	CalcImageParams:
		op add imageSize charHeight 0
		op idiv imagePos imageSize 2
		op add imageX leftBounds imagePos

	Clear:
		draw clear 255 255 255
		draw col bgColor
		drawflush display

PreStart:
Start:
	set startTime @time
	set i minI
	set rows 0
	op sub curY topBounds charHeight
	draw rect bgLeft marginClearY bgWidth marginClearHeight
	
StartLine:
	set curX rightBounds
	op add midY curY midOffset
	op add topY curY topOffset
	ClearLine:
		op sub clearY curY halfRowSp
		draw rect bgLeft clearY bgWidth rowOffset
		
	GetMaterial:
		lookup item material i
		sensor value source material
		jump NextItem equal value 0

		draw col imgColor
		draw image imageX midY material imageSize
		
	PrintDigits:
		op mod digit value 10
		op idiv value value 10
		
	DrawDigit:
		op sub curX curX charOffset
		draw col fontColor
		op add @counter @counter digit
		jump Draw0 equal digit 0
		jump Draw1 equal digit 1
		jump Draw2 equal digit 2
		jump Draw3 equal digit 3
		jump Draw4 equal digit 4
		jump Draw5 equal digit 5
		jump Draw6 equal digit 6
		jump Draw7 equal digit 7
		jump Draw8 equal digit 8
		jump Draw9 equal digit 9
	
	NextDigit:
		jump PrintDigits greaterThan value 0

	FinishLine:
		drawflush display
	
	NextLine:
		op sub curY curY rowOffset
		draw col bgColor
		op add rows rows 1
		
NextItem:
	op add i i 1
	jump StartLine lessThan i maxI

Done:
	op sub cycleTime @time startTime
	set lastRows rows
	jump Start always

Draw0:
	draw lineRect curX curY charWidth charHeight
	jump NextDigit always

Draw1:
	op add rightX curX rightOffset
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw2:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX curY stroke halfVertH
	draw lineRect rightX midY stroke halfVertH
	jump NextDigit always
	
Draw3:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw4:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX midY stroke halfRectH
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw5:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX midY stroke halfVertH
	draw lineRect rightX curY stroke halfVertH
	jump NextDigit always
	
Draw6:
	draw lineRect curX curY charWidth halfRectH
	draw lineRect curX topY charWidth stroke
	draw lineRect curX midY stroke halfVertH
	jump NextDigit always

Draw7:
	op add rightX curX rightOffset
	draw lineRect curX topY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextDigit always

Draw8:
	draw lineRect curX curY charWidth charHeight
	draw lineRect curX midY charWidth stroke
	jump NextDigit always

Draw9:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth halfRectH
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke halfVertH
	jump NextDigit always