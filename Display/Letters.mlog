Initialize:
	# note to self: use 8bit Windows-1252 encoding
	GetLinks:
		jump GetLinks lessThan @links 2
		set i 0
		LinkLoop:
			getlink link i
			sensor type link @type
			jump FoundLargeDisplay equal type @large-logic-display
			jump FoundCell equal type @memory-cell
			jump FoundCell equal type @memory-bank
			jump NextLink always
			FoundCell:
				set memory link
				jump NextLink always
			FoundLargeDisplay:
				set display link
				set displaySize 176
			NextLink:
				op add i i 1
				jump LinkLoop lessThan i @links
			jump GetLinks equal display null
			jump GetLinks equal memory null

	ASCIICodes:
		set ETX 3
		set CR 10
		set SP 32
		set startUpperA 65
		set startLowerA 97

	SetColors:
		set bgColor %000000
		set fontColor %ffff99

	SetArea:
		set columns 1
		set rows 8

	SetSpacing:
		set colSpacing 2
		set charSpacing 2
		op div halfColSp colSpacing 2

	ClearGrid:
		draw clear 0 0 0
		drawflush display
		jump PrereadGrid equal total 0
		
	CalcFont:
		op div rowOffset displaySize rows
		op floor rowOffset rowOffset
		op div colOffset displaySize columns
		op floor colOffset colOffset 
		op min rowOffset rowOffset colOffset
		op sub colWidth colOffset colSpacing

		op idiv maxImageSize colWidth 2
		op sub imageSize rowOffset 2
		op min imageSize imageSize maxImageSize

		op mul charHeight imageSize 0.8
		op floor charHeight charHeight
		op sub rowSpacing rowOffset charHeight
		op div halfRowSp rowSpacing 2

		op sub textSpace colWidth imageSize
		op div charOffset textSpace 2
		op floor charOffset charOffset
		op sub charWidth charOffset charSpacing

		op idiv stroke charWidth 6
		op add stroke stroke 1

		op idiv imagePos imageSize 2

	CalcArea:
		op sub topBounds displaySize halfRowSp
		set leftBounds halfColSp
		op sub rightBounds displaySize halfColSp 

	CalcFontDrawParams:
		op mul temp stroke 3
		op sub temp charHeight temp
		op div temp temp 2
		op floor midOffset temp 
		op add midOffset midOffset stroke
		op sub topOffset charHeight stroke
		op sub rightOffset charWidth stroke
		op sub halfRectH charHeight midOffset
		op sub halfVertH halfRectH stroke
		
Start:
StartCycle:
	op sub cycleTime @time cycleStart
	set cycleStart @time
	set i 0
	draw stroke stroke
	op sub curY topBounds charHeight
	op sub clearY curY halfRowSp

StartRow:
	CalcRowPositions:
		set curX leftBounds
		set clearX leftBounds

		op add midY curY midOffset
		op add topY curY topOffset

	ClearLine:	
		draw col bgColor
		draw rect clearX clearY rowWidth rowOffset

		draw col fontColor

	PrintLine:
		read letterCode memory i
		jump Done equal letterCode EOT
		
	DrawDigit:
		op sub letterCode letterCode startLowerA
		op add @counter @counter letterCode
		jump Drawa equal letterCode 0
		jump Drawb equal letterCode 1
		jump Drawc equal letterCode 2
		jump Drawd equal letterCode 3
		jump Drawe equal letterCode 4
		jump Drawf equal letterCode 5
		jump Drawg equal letterCode 6
		jump Drawh equal letterCode 7
		jump Drawi equal letterCode 8
		jump Drawj equal letterCode 9
		
	
	NextChar:
		op add curX curX charOffset

	drawflush display

	NextUnit:
		op add i i 1
		jump Done greaterThanEq i maxUnitIndex

	NextRow:
		op sub curY curY rowOffset
		op sub clearY clearY rowOffset
		jump StartRow always

	Skip:
		op add i i 1
		jump StartCell lessThan i maxUnitIndex

Done:
	jump Start equal skipEmpty false
	jump ClearRest lessThan total lastTotal
	set lastTotal total
	jump Start always

ClearRest:
	draw col bgColor
	draw rect clearX clearY displaySize rowOffset 
	draw rect 0 0 displaySize clearY
	jump Start always

#---------------------------------------------
# Draw Numbers
#---------------------------------------------
Draw0:
	draw lineRect curX curY charWidth charHeight
	jump NextChar always

Draw1:
	op add rightX curX rightOffset
	draw lineRect rightX curY stroke charHeight
	jump NextChar always

Draw2:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX curY stroke halfVertH
	draw lineRect rightX midY stroke halfVertH
	jump NextChar always
	
Draw3:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextChar always

Draw4:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX midY stroke halfRectH
	draw lineRect rightX curY stroke charHeight
	jump NextChar always

Draw5:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth stroke
	draw lineRect curX topY charWidth stroke
	draw lineRect curX curY charWidth stroke
	draw lineRect curX midY stroke halfVertH
	draw lineRect rightX curY stroke halfVertH
	jump NextChar always
	
Draw6:
	draw lineRect curX curY charWidth halfRectH
	draw lineRect curX topY charWidth stroke
	draw lineRect curX midY stroke halfVertH
	jump NextChar always

Draw7:
	op add rightX curX rightOffset
	draw lineRect curX topY charWidth stroke
	draw lineRect rightX curY stroke charHeight
	jump NextChar always

Draw8:
	draw lineRect curX curY charWidth charHeight
	draw lineRect curX midY charWidth stroke
	jump NextChar always

Draw9:
	op add rightX curX rightOffset
	draw lineRect curX midY charWidth halfRectH
	draw lineRect curX curY charWidth stroke
	draw lineRect rightX curY stroke halfVertH
	jump NextChar always

			